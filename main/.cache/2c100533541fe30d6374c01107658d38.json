{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","loc":{"line":3,"column":37}},{"name":"lodash/isFunction","loc":{"line":10,"column":50}},{"name":"lodash/noop","loc":{"line":12,"column":44}}],"generated":{"js":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = patch;\n\nvar _isFunction2 = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nvar _noop2 = _interopRequireDefault(require(\"lodash/noop\"));\n\nfunction patch() {\n  // FIXME umi unmount feature request\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  var rawHistoryListen = function rawHistoryListen(_) {\n    return _noop2.default;\n  };\n\n  var historyListeners = [];\n  var historyUnListens = [];\n\n  if (window.g_history && (0, _isFunction2.default)(window.g_history.listen)) {\n    rawHistoryListen = window.g_history.listen.bind(window.g_history);\n\n    window.g_history.listen = function (listener) {\n      historyListeners.push(listener);\n      var unListen = rawHistoryListen(listener);\n      historyUnListens.push(unListen);\n      return function () {\n        unListen();\n        historyUnListens.splice(historyUnListens.indexOf(unListen), 1);\n        historyListeners.splice(historyListeners.indexOf(listener), 1);\n      };\n    };\n  }\n\n  return function free() {\n    var rebuild = _noop2.default;\n    /*\n     还存在余量 listener 表明未被卸载，存在两种情况\n     1. 应用在 unmout 时未正确卸载 listener\n     2. listener 是应用 mount 之前绑定的，\n     第二种情况下应用在下次 mount 之前需重新绑定该 listener\n     */\n\n    if (historyListeners.length) {\n      rebuild = function rebuild() {\n        // 必须使用 window.g_history.listen 的方式重新绑定 listener，从而能保证 rebuild 这部分也能被捕获到，否则在应用卸载后无法正确的移除这部分副作用\n        historyListeners.forEach(function (listener) {\n          return window.g_history.listen(listener);\n        });\n      };\n    } // 卸载余下的 listener\n\n\n    historyUnListens.forEach(function (unListen) {\n      return unListen();\n    }); // restore\n\n    if (window.g_history && (0, _isFunction2.default)(window.g_history.listen)) {\n      window.g_history.listen = rawHistoryListen;\n    }\n\n    return rebuild;\n  };\n}"},"hash":"ca44bc5d0b9eea2f29fb81468f291a54"}